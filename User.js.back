var inquirer = require("inquirer");
var DB = require("./DB");

var db = new DB("bamazon");
db.showConnData();

var User = function (user) {
    this.user = user;
    this.prompt = function () {
        switch (this.user) {
            case "Customer":
            default:
                inquirer.prompt([
                    {
                        name: "item",
                        type: "input",
                        message: "Please enter the ID of the item you'd like to buy.",
                        validate: function checkQty(value) {
                            console.log(`\nValidate that input is an integer.`);
                            var pass = value.match(/^[0-9]+$/);
                            if (pass) {
                                console.log(`Lookup ID. If exists move on. If invalid reprompt.`);
                                // Call DB lookup here
                                if (value === true) {
                                    console.log(`${value} is a valid ID. Display info and move on to quantity.`);
                                    return true;
                                } else {
                                    return `Looks like ID ${value} doesn't exist. Please enter a valid ID.`;
                                }
                            }
                            return "IDs can only contain numeric values 0 - 9 (e.g. 10). Please enter a valid ID.";
                        }
                    }
                ]).then(answer => {
                    console.log(`Answer was ${answer.item}`);
                    inquirer.prompt([
                        {
                            name: "quantity",
                            type: "input",
                            message: "How many units?",
                            validate: function checkQty(value) {
                                console.log(`\nValidate that input is an integer.`);
                                var pass = value.match(/^[0-9]+$/);
                                if (pass) {
                                    console.log(`Compare entered quantity with available quatity. If too much reprompt.`);
                                    // Call DB lookup here
                                    if (value > available) {
                                        console.log(`${value} is more than ${available}!`)
                                        return `You can only enter up to ${available} units.`;
                                    } else {
                                        console.log(`${value} units <= ${available} units. Place order and update DB.`);
                                        return true;
                                    }
                                }
                                return `Quantity must be a numeric value up to the max available units of ${available}.`;
                            }
                        }
                    ]).then(answer => {
                        console.log(`Ensure ${answer.quantity} is <= available quantity.`);
                        // Place order logic goes here (Update DB and display total cost to user).
                    });
                });
                break;

            case "Manager":
                inquirer.prompt([
                    {
                        name: "task",
                        type: "list",
                        message: "What would you like to do?",
                        choices: ["View Products for Sale", "View Low Inventory", "Add to Inventory", "Add New Product"]
                    }
                ]).then(answer => {
                    console.log(`Task was ${answer.task}`);
                    switch (answer.task) {
                        case "View Products for Sale":
                        default:
                            // DB logic
                            break;
                        case "View Low Inventory":
                            // DB logic
                            break;
                        case "Add to Inventory":
                            // DB logic
                            break;
                        case "Add New Product":
                            // DB logic
                            break;
                    }
                });
                break;

            case "Supervisor":
                inquirer.prompt([
                    {
                        name: "task",
                        type: "list",
                        message: "What would you like to do?",
                        choices: ["View Product Sales by Department", "Create New Department"]
                    }
                ]).then(answer => {
                    console.log(`Task was ${answer.task}`);
                    switch (answer.task) {
                        case "View Product Sales by Department":
                        default:
                            // DB logic
                            break;
                        case "Create New Department":
                            // DB logic
                            break;
                    }
                });
                break;
        }
    }

}

module.exports = User;